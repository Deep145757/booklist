service: book-scan-v2
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  environment:
    stage: ${self:provider.stage}
    STAGE: ${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeStream
            - dynamodb:ConditionCheckItem
          Resource: "arn:aws:dynamodb:*:*:table/My_Library_${self:provider.stage}"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeStream
            - dynamodb:ConditionCheckItem
          Resource: "arn:aws:dynamodb:*:*:table/My_Library_${self:provider.stage}/index/*"
        - Effect: "Allow"
          Action:
            - "secretsmanager:GetSecretValue"
          Resource: "arn:aws:secretsmanager:us-east-1:*"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource: ["arn:aws:s3:::my-library-cover-upload-staging/*", "arn:aws:s3:::my-library-cover-uploads/*"]
        - Effect: Allow
          Action:
            - "execute-api:ManageConnections"
          Resource:
            - "arn:aws:execute-api:*:*:**/@connections/*"

functions:
  connect:
    handler: ws-connection.connect
    events:
      - websocket:
          route: $connect

  disconnect:
    handler: ws-connection.disconnect
    events:
      - websocket:
          route: $disconnect

  sync:
    handler: ws-connection.sync
    events:
      - websocket:
          route: sync

  checkScanStatus:
    handler: handlers/getPendingScanCount.handler

  scanBook:
    handler: handlers/scanBook.handler

custom:
  esbuild:
    bundle: true
    minify: true
    exclude: ["aws-sdk", "@aws-sdk/util-utf8-node", "@aws-sdk/client-apigatewaymanagementapi", "@aws-sdk/lib-dynamodb", "@aws-sdk/client-dynamodb"]

package:
  individually: true

plugins:
  - serverless-esbuild
